var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./Options/Classes/PolygonMask", "./PolygonMaskInstance", "tsparticles-engine", "./Enums/PolygonMaskInlineArrangement", "./Enums/PolygonMaskMoveType", "./Enums/PolygonMaskType", "./Options/Interfaces/IPolygonMaskOptions"], factory);
    }
})(function (require, exports) {
    "use strict";
    var __syncRequire = typeof module === "object" && typeof module.exports === "object";
    var _PolygonMaskPlugin_engine;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.loadPolygonMaskPlugin = void 0;
    const PolygonMask_1 = require("./Options/Classes/PolygonMask");
    const PolygonMaskInstance_1 = require("./PolygonMaskInstance");
    const tsparticles_engine_1 = require("tsparticles-engine");
    class PolygonMaskPlugin {
        constructor(engine) {
            _PolygonMaskPlugin_engine.set(this, void 0);
            this.id = "polygonMask";
            __classPrivateFieldSet(this, _PolygonMaskPlugin_engine, engine, "f");
        }
        getPlugin(container) {
            return new PolygonMaskInstance_1.PolygonMaskInstance(container, __classPrivateFieldGet(this, _PolygonMaskPlugin_engine, "f"));
        }
        needsPlugin(options) {
            var _a, _b, _c;
            return ((_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : (((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== "none"));
        }
        loadOptions(options, source) {
            if (!this.needsPlugin(source)) {
                return;
            }
            const optionsCast = options;
            let polygonOptions = optionsCast.polygon;
            if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {
                optionsCast.polygon = polygonOptions = new PolygonMask_1.PolygonMask();
            }
            polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);
        }
    }
    _PolygonMaskPlugin_engine = new WeakMap();
    async function loadPolygonMaskPlugin(engine) {
        if (!(0, tsparticles_engine_1.isSsr)() && !("SVGPathSeg" in window)) {
            await (__syncRequire ? Promise.resolve().then(() => __importStar(require("./pathseg.js"))) : new Promise((resolve_1, reject_1) => { require(["./pathseg.js"], resolve_1, reject_1); }).then(__importStar));
        }
        const plugin = new PolygonMaskPlugin(engine);
        await engine.addPlugin(plugin);
    }
    exports.loadPolygonMaskPlugin = loadPolygonMaskPlugin;
    __exportStar(require("./Enums/PolygonMaskInlineArrangement"), exports);
    __exportStar(require("./Enums/PolygonMaskMoveType"), exports);
    __exportStar(require("./Enums/PolygonMaskType"), exports);
    __exportStar(require("./Options/Interfaces/IPolygonMaskOptions"), exports);
});
